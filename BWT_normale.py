import numpy as np

def BWT(t):
    if type(t) != str:
        exit(0)
        # mettere eccezione

    if t[-1] != '$':
        t += '$'

    string_size = len(t)


    matrix = np.array([t[-i :] for i in np.arange(string_size)], dtype= '<U' + str(string_size))
    suffix_arr = np.argsort(matrix)
    print(matrix)
    print(suffix_arr)
    bwt = []
    n = np.size(suffix_arr)
    for i in np.arange(n):
        # j = suffix_arr[i] - 1
        # if j < 0:
        #     j += np.size(suffix_arr -1)
        if suffix_arr[i] > 0:
            bwt.append(t[suffix_arr[i] - 1])
        elif suffix_arr[i] == 0:
            bwt.append('$')


    return ''.join(bwt)

    # prendo riga per riga le parole della matrice e gli prendo l'ultimo elemento e concateno per formare una stringa
    #return "".join([matrix[i][-1] for i in np.arange(string_size)])



milleCaratteri =  'acctgacctgacacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgtgaccctgaacctgacctgacacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgtgaccctgaacctgacctgacacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgtgaccctgaacctgacctgacacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgac'

duemilaCaratteri = "acctgacctgacacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgtgaccctgaacctgacctgacacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgtgaccctgaacctgacctgacacctgacctgactgaccctgaccctgaccctgacccctgactgacctgacctgacacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgtgaccctgaacctgacctgacacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgtgaccctgaacctgacctgacacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgtgaccctgaacctgacctgacacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgacacccctgacctgacctgacctgacctgacctgacctgacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgtgaccctgaacctgacctgacacctgacctgactgaccctgaccctgaccctgacccctgactgacccctgacctgacctgacctgacctgacctgacctgacctgacctgac"


#annb$aa
#potrei mettere l'opzione verbose
finalString = BWT('banana')
print(finalString)
